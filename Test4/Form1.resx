<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>